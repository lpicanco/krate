{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Krate","text":"<p>Krate is a rate limiter library for Kotlin.</p> <p> </p>"},{"location":"#features","title":"Features","text":"<ul> <li>Token Bucket algorithm</li> <li>Burst support</li> <li>Redis support</li> <li>Unused keys eviction support </li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#gradle","title":"Gradle","text":"<pre><code>implementation 'io.github.lpicanco:krate-core:${krateVersion}'\n</code></pre>"},{"location":"#gradle-kotlin-dsl","title":"Gradle Kotlin DSL","text":"<pre><code>implementation(\"io.github.lpicanco:krate-core:${krateVersion}\")\n</code></pre>"},{"location":"#maven","title":"Maven","text":"<pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;io.github.lpicanco&lt;/groupId&gt;\n  &lt;artifactId&gt;krate-core&lt;/artifactId&gt;\n  &lt;version&gt;${krateVersion}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"#how-to-use","title":"How to use","text":""},{"location":"#rate-of-5-per-second","title":"Rate of 5 per second","text":"<pre><code>import com.neutrine.krate.rateLimiter\n\n// Create a rate limiter with a rate of 5 per second.\nval rateLimiter = rateLimiter(maxRate = 5)\n\n// Use the rate limiter.\nval taken: Boolean = rateLimiter.tryTake()\n</code></pre>"},{"location":"#rate-of-10-per-minute-with-a-max-burst-of-10","title":"Rate of 10 per minute with a max burst of 10.","text":"<pre><code>// Create a rate limiter with a rate of 5 per minute and a max burst of 10.\nval rateLimiter = rateLimiter(maxRate = 5) {\n    maxBurst = 10\n    maxRateTimeUnit = ChronoUnit.MINUTES\n}\n\n// Use the rate limiter.\nval taken: Boolean = rateLimiter.tryTake()\n</code></pre>"},{"location":"#rate-of-5-per-second-blocking","title":"Rate of 5 per second, blocking","text":"<pre><code>// Create a rate limiter with a rate of 5 per second.\nval rateLimiter = rateLimiter(maxRate = 5)\n\n// Wait until a token is available.\nrateLimiter.awaitUntilTake()\n</code></pre>"},{"location":"#rate-of-5-per-second-expiring-keys-unused-in-the-last-2-hours","title":"Rate of 5 per second, expiring keys unused in the last 2 hours","text":"<pre><code>import com.neutrine.krate.rateLimiter\n\n// Create a rate limiter with a rate of 5 per second. Unused keys will be evicted after 2 hours.\nval rateLimiter = rateLimiter(maxRate = 5) {\n    stateStorage = simpleMemoryStateStorageWithEviction {\n        ttlAfterLastAccess = 2.hours\n    }    \n}\n\n// Use the rate limiter.\nval taken: Boolean = rateLimiter.tryTake(\"myKey\")\n</code></pre>"},{"location":"#rate-of-5-per-second-using-redis-as-state-storage","title":"Rate of 5 per second using Redis as state storage","text":"<pre><code>// Create a rate limiter with a rate of 5 per second and redis.\nval rateLimiter = rateLimiter(maxRate = 5) {\n    stateStorage = redisStateStorage {\n        host = \"my-custom-uri.endpoint\"\n    }\n}\n\n// Use the rate limiter.\nval taken: Boolean = rateLimiter.tryTake()\n</code></pre>"}]}