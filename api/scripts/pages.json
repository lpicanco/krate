[{"name":"class RedisStateStorage(val host: String, val port: Int) : StateStorage","description":"com.neutrine.krate.storage.redis.RedisStateStorage","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/index.html","searchKeys":["RedisStateStorage","class RedisStateStorage(val host: String, val port: Int) : StateStorage","com.neutrine.krate.storage.redis.RedisStateStorage"]},{"name":"class RedisStateStorageBuilder","description":"com.neutrine.krate.storage.redis.RedisStateStorageBuilder","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage-builder/index.html","searchKeys":["RedisStateStorageBuilder","class RedisStateStorageBuilder","com.neutrine.krate.storage.redis.RedisStateStorageBuilder"]},{"name":"constructor()","description":"com.neutrine.krate.storage.redis.RedisStateStorageBuilder.RedisStateStorageBuilder","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage-builder/-redis-state-storage-builder.html","searchKeys":["RedisStateStorageBuilder","constructor()","com.neutrine.krate.storage.redis.RedisStateStorageBuilder.RedisStateStorageBuilder"]},{"name":"constructor(host: String, port: Int)","description":"com.neutrine.krate.storage.redis.RedisStateStorage.RedisStateStorage","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/-redis-state-storage.html","searchKeys":["RedisStateStorage","constructor(host: String, port: Int)","com.neutrine.krate.storage.redis.RedisStateStorage.RedisStateStorage"]},{"name":"fun build(): RedisStateStorage","description":"com.neutrine.krate.storage.redis.RedisStateStorageBuilder.build","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage-builder/build.html","searchKeys":["build","fun build(): RedisStateStorage","com.neutrine.krate.storage.redis.RedisStateStorageBuilder.build"]},{"name":"fun redisStateStorage(init: RedisStateStorageBuilder.() -> Unit): RedisStateStorage","description":"com.neutrine.krate.storage.redis.redisStateStorage","location":"krate-storage-redis/com.neutrine.krate.storage.redis/redis-state-storage.html","searchKeys":["redisStateStorage","fun redisStateStorage(init: RedisStateStorageBuilder.() -> Unit): RedisStateStorage","com.neutrine.krate.storage.redis.redisStateStorage"]},{"name":"object Companion","description":"com.neutrine.krate.storage.redis.RedisStateStorage.Companion","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/-companion/index.html","searchKeys":["Companion","object Companion","com.neutrine.krate.storage.redis.RedisStateStorage.Companion"]},{"name":"open override fun getBucketState(key: String): BucketState?","description":"com.neutrine.krate.storage.redis.RedisStateStorage.getBucketState","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/get-bucket-state.html","searchKeys":["getBucketState","open override fun getBucketState(key: String): BucketState?","com.neutrine.krate.storage.redis.RedisStateStorage.getBucketState"]},{"name":"open suspend override fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","description":"com.neutrine.krate.storage.redis.RedisStateStorage.compareAndSet","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/compare-and-set.html","searchKeys":["compareAndSet","open suspend override fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","com.neutrine.krate.storage.redis.RedisStateStorage.compareAndSet"]},{"name":"val host: String","description":"com.neutrine.krate.storage.redis.RedisStateStorage.host","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/host.html","searchKeys":["host","val host: String","com.neutrine.krate.storage.redis.RedisStateStorage.host"]},{"name":"val port: Int","description":"com.neutrine.krate.storage.redis.RedisStateStorage.port","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage/port.html","searchKeys":["port","val port: Int","com.neutrine.krate.storage.redis.RedisStateStorage.port"]},{"name":"var host: String","description":"com.neutrine.krate.storage.redis.RedisStateStorageBuilder.host","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage-builder/host.html","searchKeys":["host","var host: String","com.neutrine.krate.storage.redis.RedisStateStorageBuilder.host"]},{"name":"var port: Int","description":"com.neutrine.krate.storage.redis.RedisStateStorageBuilder.port","location":"krate-storage-redis/com.neutrine.krate.storage.redis/-redis-state-storage-builder/port.html","searchKeys":["port","var port: Int","com.neutrine.krate.storage.redis.RedisStateStorageBuilder.port"]},{"name":"abstract fun getBucketState(key: String): BucketState?","description":"com.neutrine.krate.storage.StateStorage.getBucketState","location":"krate-core/com.neutrine.krate.storage/-state-storage/get-bucket-state.html","searchKeys":["getBucketState","abstract fun getBucketState(key: String): BucketState?","com.neutrine.krate.storage.StateStorage.getBucketState"]},{"name":"abstract suspend fun awaitUntilTake()","description":"com.neutrine.krate.RateLimiter.awaitUntilTake","location":"krate-core/com.neutrine.krate/-rate-limiter/await-until-take.html","searchKeys":["awaitUntilTake","abstract suspend fun awaitUntilTake()","com.neutrine.krate.RateLimiter.awaitUntilTake"]},{"name":"abstract suspend fun awaitUntilTake(key: String)","description":"com.neutrine.krate.RateLimiter.awaitUntilTake","location":"krate-core/com.neutrine.krate/-rate-limiter/await-until-take.html","searchKeys":["awaitUntilTake","abstract suspend fun awaitUntilTake(key: String)","com.neutrine.krate.RateLimiter.awaitUntilTake"]},{"name":"abstract suspend fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","description":"com.neutrine.krate.storage.StateStorage.compareAndSet","location":"krate-core/com.neutrine.krate.storage/-state-storage/compare-and-set.html","searchKeys":["compareAndSet","abstract suspend fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","com.neutrine.krate.storage.StateStorage.compareAndSet"]},{"name":"abstract suspend fun tryTake(): Boolean","description":"com.neutrine.krate.RateLimiter.tryTake","location":"krate-core/com.neutrine.krate/-rate-limiter/try-take.html","searchKeys":["tryTake","abstract suspend fun tryTake(): Boolean","com.neutrine.krate.RateLimiter.tryTake"]},{"name":"abstract suspend fun tryTake(key: String): Boolean","description":"com.neutrine.krate.RateLimiter.tryTake","location":"krate-core/com.neutrine.krate/-rate-limiter/try-take.html","searchKeys":["tryTake","abstract suspend fun tryTake(key: String): Boolean","com.neutrine.krate.RateLimiter.tryTake"]},{"name":"class RateLimiterBuilder(maxRate: Long)","description":"com.neutrine.krate.RateLimiterBuilder","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/index.html","searchKeys":["RateLimiterBuilder","class RateLimiterBuilder(maxRate: Long)","com.neutrine.krate.RateLimiterBuilder"]},{"name":"class SimpleMemoryStateStorage : StateStorage","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorage","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage/index.html","searchKeys":["SimpleMemoryStateStorage","class SimpleMemoryStateStorage : StateStorage","com.neutrine.krate.storage.memory.SimpleMemoryStateStorage"]},{"name":"class SimpleMemoryStateStorageBuilder","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-builder/index.html","searchKeys":["SimpleMemoryStateStorageBuilder","class SimpleMemoryStateStorageBuilder","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder"]},{"name":"class SimpleMemoryStateStorageWithEviction(clock: Clock, stateStorage: SimpleMemoryStateStorage = SimpleMemoryStateStorage(), ttlAfterLastAccess: Duration = 2.hours, expirationCheckInterval: Duration = 10.minutes, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default)) : StateStorage","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEviction","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction/index.html","searchKeys":["SimpleMemoryStateStorageWithEviction","class SimpleMemoryStateStorageWithEviction(clock: Clock, stateStorage: SimpleMemoryStateStorage = SimpleMemoryStateStorage(), ttlAfterLastAccess: Duration = 2.hours, expirationCheckInterval: Duration = 10.minutes, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default)) : StateStorage","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEviction"]},{"name":"class SimpleMemoryStateStorageWithEvictionBuilder","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/index.html","searchKeys":["SimpleMemoryStateStorageWithEvictionBuilder","class SimpleMemoryStateStorageWithEvictionBuilder","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder"]},{"name":"class TokenBucketLimiter(val capacity: Long, val refillTokenInterval: Duration, clock: Clock, stateStorage: StateStorage = SimpleMemoryStateStorage()) : RateLimiter","description":"com.neutrine.krate.algorithms.TokenBucketLimiter","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/index.html","searchKeys":["TokenBucketLimiter","class TokenBucketLimiter(val capacity: Long, val refillTokenInterval: Duration, clock: Clock, stateStorage: StateStorage = SimpleMemoryStateStorage()) : RateLimiter","com.neutrine.krate.algorithms.TokenBucketLimiter"]},{"name":"constructor()","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.SimpleMemoryStateStorage","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage/-simple-memory-state-storage.html","searchKeys":["SimpleMemoryStateStorage","constructor()","com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.SimpleMemoryStateStorage"]},{"name":"constructor()","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder.SimpleMemoryStateStorageBuilder","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-builder/-simple-memory-state-storage-builder.html","searchKeys":["SimpleMemoryStateStorageBuilder","constructor()","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder.SimpleMemoryStateStorageBuilder"]},{"name":"constructor()","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.SimpleMemoryStateStorageWithEvictionBuilder","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/-simple-memory-state-storage-with-eviction-builder.html","searchKeys":["SimpleMemoryStateStorageWithEvictionBuilder","constructor()","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.SimpleMemoryStateStorageWithEvictionBuilder"]},{"name":"constructor(capacity: Long, refillTokenInterval: Duration, clock: Clock, stateStorage: StateStorage = SimpleMemoryStateStorage())","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.TokenBucketLimiter","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/-token-bucket-limiter.html","searchKeys":["TokenBucketLimiter","constructor(capacity: Long, refillTokenInterval: Duration, clock: Clock, stateStorage: StateStorage = SimpleMemoryStateStorage())","com.neutrine.krate.algorithms.TokenBucketLimiter.TokenBucketLimiter"]},{"name":"constructor(clock: Clock, stateStorage: SimpleMemoryStateStorage = SimpleMemoryStateStorage(), ttlAfterLastAccess: Duration = 2.hours, expirationCheckInterval: Duration = 10.minutes, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEviction.SimpleMemoryStateStorageWithEviction","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction/-simple-memory-state-storage-with-eviction.html","searchKeys":["SimpleMemoryStateStorageWithEviction","constructor(clock: Clock, stateStorage: SimpleMemoryStateStorage = SimpleMemoryStateStorage(), ttlAfterLastAccess: Duration = 2.hours, expirationCheckInterval: Duration = 10.minutes, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEviction.SimpleMemoryStateStorageWithEviction"]},{"name":"constructor(maxRate: Long)","description":"com.neutrine.krate.RateLimiterBuilder.RateLimiterBuilder","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/-rate-limiter-builder.html","searchKeys":["RateLimiterBuilder","constructor(maxRate: Long)","com.neutrine.krate.RateLimiterBuilder.RateLimiterBuilder"]},{"name":"constructor(remainingTokens: Long, lastUpdated: Instant)","description":"com.neutrine.krate.algorithms.BucketState.BucketState","location":"krate-core/com.neutrine.krate.algorithms/-bucket-state/-bucket-state.html","searchKeys":["BucketState","constructor(remainingTokens: Long, lastUpdated: Instant)","com.neutrine.krate.algorithms.BucketState.BucketState"]},{"name":"data class BucketState(val remainingTokens: Long, val lastUpdated: Instant)","description":"com.neutrine.krate.algorithms.BucketState","location":"krate-core/com.neutrine.krate.algorithms/-bucket-state/index.html","searchKeys":["BucketState","data class BucketState(val remainingTokens: Long, val lastUpdated: Instant)","com.neutrine.krate.algorithms.BucketState"]},{"name":"fun build(): RateLimiter","description":"com.neutrine.krate.RateLimiterBuilder.build","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/build.html","searchKeys":["build","fun build(): RateLimiter","com.neutrine.krate.RateLimiterBuilder.build"]},{"name":"fun build(): SimpleMemoryStateStorage","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder.build","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-builder/build.html","searchKeys":["build","fun build(): SimpleMemoryStateStorage","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageBuilder.build"]},{"name":"fun build(): SimpleMemoryStateStorageWithEviction","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.build","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/build.html","searchKeys":["build","fun build(): SimpleMemoryStateStorageWithEviction","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.build"]},{"name":"fun rateLimiter(maxRate: Long, init: RateLimiterBuilder.() -> Unit = {}): RateLimiter","description":"com.neutrine.krate.rateLimiter","location":"krate-core/com.neutrine.krate/rate-limiter.html","searchKeys":["rateLimiter","fun rateLimiter(maxRate: Long, init: RateLimiterBuilder.() -> Unit = {}): RateLimiter","com.neutrine.krate.rateLimiter"]},{"name":"fun simpleMemoryStateStorage(init: SimpleMemoryStateStorageBuilder.() -> Unit = {}): StateStorage","description":"com.neutrine.krate.storage.memory.simpleMemoryStateStorage","location":"krate-core/com.neutrine.krate.storage.memory/simple-memory-state-storage.html","searchKeys":["simpleMemoryStateStorage","fun simpleMemoryStateStorage(init: SimpleMemoryStateStorageBuilder.() -> Unit = {}): StateStorage","com.neutrine.krate.storage.memory.simpleMemoryStateStorage"]},{"name":"fun simpleMemoryStateStorageWithEviction(init: SimpleMemoryStateStorageWithEvictionBuilder.() -> Unit = {}): SimpleMemoryStateStorageWithEviction","description":"com.neutrine.krate.storage.memory.simpleMemoryStateStorageWithEviction","location":"krate-core/com.neutrine.krate.storage.memory/simple-memory-state-storage-with-eviction.html","searchKeys":["simpleMemoryStateStorageWithEviction","fun simpleMemoryStateStorageWithEviction(init: SimpleMemoryStateStorageWithEvictionBuilder.() -> Unit = {}): SimpleMemoryStateStorageWithEviction","com.neutrine.krate.storage.memory.simpleMemoryStateStorageWithEviction"]},{"name":"interface RateLimiter","description":"com.neutrine.krate.RateLimiter","location":"krate-core/com.neutrine.krate/-rate-limiter/index.html","searchKeys":["RateLimiter","interface RateLimiter","com.neutrine.krate.RateLimiter"]},{"name":"interface StateStorage","description":"com.neutrine.krate.storage.StateStorage","location":"krate-core/com.neutrine.krate.storage/-state-storage/index.html","searchKeys":["StateStorage","interface StateStorage","com.neutrine.krate.storage.StateStorage"]},{"name":"object Companion","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.Companion","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/-companion/index.html","searchKeys":["Companion","object Companion","com.neutrine.krate.algorithms.TokenBucketLimiter.Companion"]},{"name":"object Companion","description":"com.neutrine.krate.storage.StateStorage.Companion","location":"krate-core/com.neutrine.krate.storage/-state-storage/-companion/index.html","searchKeys":["Companion","object Companion","com.neutrine.krate.storage.StateStorage.Companion"]},{"name":"open override fun getBucketState(key: String): BucketState?","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.getBucketState","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage/get-bucket-state.html","searchKeys":["getBucketState","open override fun getBucketState(key: String): BucketState?","com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.getBucketState"]},{"name":"open suspend override fun awaitUntilTake()","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.awaitUntilTake","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/await-until-take.html","searchKeys":["awaitUntilTake","open suspend override fun awaitUntilTake()","com.neutrine.krate.algorithms.TokenBucketLimiter.awaitUntilTake"]},{"name":"open suspend override fun awaitUntilTake(key: String)","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.awaitUntilTake","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/await-until-take.html","searchKeys":["awaitUntilTake","open suspend override fun awaitUntilTake(key: String)","com.neutrine.krate.algorithms.TokenBucketLimiter.awaitUntilTake"]},{"name":"open suspend override fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.compareAndSet","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage/compare-and-set.html","searchKeys":["compareAndSet","open suspend override fun compareAndSet(key: String, compareAndSetFunction: (current: BucketState?) -> BucketState)","com.neutrine.krate.storage.memory.SimpleMemoryStateStorage.compareAndSet"]},{"name":"open suspend override fun tryTake(): Boolean","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.tryTake","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/try-take.html","searchKeys":["tryTake","open suspend override fun tryTake(): Boolean","com.neutrine.krate.algorithms.TokenBucketLimiter.tryTake"]},{"name":"open suspend override fun tryTake(key: String): Boolean","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.tryTake","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/try-take.html","searchKeys":["tryTake","open suspend override fun tryTake(key: String): Boolean","com.neutrine.krate.algorithms.TokenBucketLimiter.tryTake"]},{"name":"val DEFAULT_RETRY_DELAY: Duration","description":"com.neutrine.krate.storage.StateStorage.Companion.DEFAULT_RETRY_DELAY","location":"krate-core/com.neutrine.krate.storage/-state-storage/-companion/-d-e-f-a-u-l-t_-r-e-t-r-y_-d-e-l-a-y.html","searchKeys":["DEFAULT_RETRY_DELAY","val DEFAULT_RETRY_DELAY: Duration","com.neutrine.krate.storage.StateStorage.Companion.DEFAULT_RETRY_DELAY"]},{"name":"val capacity: Long","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.capacity","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/capacity.html","searchKeys":["capacity","val capacity: Long","com.neutrine.krate.algorithms.TokenBucketLimiter.capacity"]},{"name":"val lastUpdated: Instant","description":"com.neutrine.krate.algorithms.BucketState.lastUpdated","location":"krate-core/com.neutrine.krate.algorithms/-bucket-state/last-updated.html","searchKeys":["lastUpdated","val lastUpdated: Instant","com.neutrine.krate.algorithms.BucketState.lastUpdated"]},{"name":"val refillTokenInterval: Duration","description":"com.neutrine.krate.algorithms.TokenBucketLimiter.refillTokenInterval","location":"krate-core/com.neutrine.krate.algorithms/-token-bucket-limiter/refill-token-interval.html","searchKeys":["refillTokenInterval","val refillTokenInterval: Duration","com.neutrine.krate.algorithms.TokenBucketLimiter.refillTokenInterval"]},{"name":"val remainingTokens: Long","description":"com.neutrine.krate.algorithms.BucketState.remainingTokens","location":"krate-core/com.neutrine.krate.algorithms/-bucket-state/remaining-tokens.html","searchKeys":["remainingTokens","val remainingTokens: Long","com.neutrine.krate.algorithms.BucketState.remainingTokens"]},{"name":"var clock: Clock","description":"com.neutrine.krate.RateLimiterBuilder.clock","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/clock.html","searchKeys":["clock","var clock: Clock","com.neutrine.krate.RateLimiterBuilder.clock"]},{"name":"var clock: Clock","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.clock","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/clock.html","searchKeys":["clock","var clock: Clock","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.clock"]},{"name":"var coroutineScope: CoroutineScope","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.coroutineScope","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/coroutine-scope.html","searchKeys":["coroutineScope","var coroutineScope: CoroutineScope","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.coroutineScope"]},{"name":"var expirationCheckInterval: Duration","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.expirationCheckInterval","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/expiration-check-interval.html","searchKeys":["expirationCheckInterval","var expirationCheckInterval: Duration","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.expirationCheckInterval"]},{"name":"var maxBurst: Long","description":"com.neutrine.krate.RateLimiterBuilder.maxBurst","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/max-burst.html","searchKeys":["maxBurst","var maxBurst: Long","com.neutrine.krate.RateLimiterBuilder.maxBurst"]},{"name":"var maxRateTimeUnit: TemporalUnit","description":"com.neutrine.krate.RateLimiterBuilder.maxRateTimeUnit","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/max-rate-time-unit.html","searchKeys":["maxRateTimeUnit","var maxRateTimeUnit: TemporalUnit","com.neutrine.krate.RateLimiterBuilder.maxRateTimeUnit"]},{"name":"var stateStorage: SimpleMemoryStateStorage","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.stateStorage","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/state-storage.html","searchKeys":["stateStorage","var stateStorage: SimpleMemoryStateStorage","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.stateStorage"]},{"name":"var stateStorage: StateStorage","description":"com.neutrine.krate.RateLimiterBuilder.stateStorage","location":"krate-core/com.neutrine.krate/-rate-limiter-builder/state-storage.html","searchKeys":["stateStorage","var stateStorage: StateStorage","com.neutrine.krate.RateLimiterBuilder.stateStorage"]},{"name":"var ttlAfterLastAccess: Duration","description":"com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.ttlAfterLastAccess","location":"krate-core/com.neutrine.krate.storage.memory/-simple-memory-state-storage-with-eviction-builder/ttl-after-last-access.html","searchKeys":["ttlAfterLastAccess","var ttlAfterLastAccess: Duration","com.neutrine.krate.storage.memory.SimpleMemoryStateStorageWithEvictionBuilder.ttlAfterLastAccess"]}]